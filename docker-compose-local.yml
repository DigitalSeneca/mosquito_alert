version: '3.9'

volumes:
  mosquito_alert_local_postgres_data: {}
  mosquito_alert_local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      args:
        BUILD_ENVIRONMENT: local
    image: mosquito_alert_local
    container_name: mosquito_alert_local_django
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start
    healthcheck:
      test: "curl -f http://localhost:8000/ping/ || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  postgres:
    image: postgis/postgis:15-3.3
    container_name: mosquito_alert_local_postgres
    volumes:
      - mosquito_alert_local_postgres_data:/var/lib/postgresql/data
      - mosquito_alert_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mosquito_alert_local_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:6
    container_name: mosquito_alert_local_redis

  celeryworker:
    <<: *django
    container_name: mosquito_alert_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker
    healthcheck:
      test: "/entrypoint celery inspect ping -d celery@$$HOSTNAME"

  celerybeat:
    <<: *django
    container_name: mosquito_alert_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat
    healthcheck:
      disable: true

  flower:
    <<: *django
    container_name: mosquito_alert_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
    healthcheck:
      disable: true
