# Generated by Django 3.2.25 on 2025-01-24 11:00

from django.db import migrations, models
import django.db.models.deletion


def remove_duplicate_culex(apps, schema_editor):
    Categories = apps.get_model('tigacrafting', 'Categories')
    OtherSpecies = apps.get_model('tigacrafting', 'OtherSpecies')

    ExpertReportAnnotation = apps.get_model('tigacrafting', 'ExpertReportAnnotation')

    culex = Categories.objects.filter(name__icontains='Culex').filter(name__icontains='sp').first()
    dup_culex = OtherSpecies.objects.filter(name__icontains='Culex').filter(name__icontains='sp').first()

    if not dup_culex:
        return

    ExpertReportAnnotation.objects.filter(
        other_species=dup_culex
    ).update(
        other_species=None,
        category=culex,
        validation_value=2  # Definetely culex
    )

    dup_culex.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tigacrafting', '0021_auto_20240125_1557'),
    ]

    operations = [
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('rank', models.PositiveSmallIntegerField(choices=[(30, 'Class'), (40, 'Order'), (50, 'Family'), (60, 'Genus'), (61, 'Subgenus'), (70, 'Species complex'), (71, 'Species')])),
                ('name', models.CharField(max_length=32, unique=True)),
                ('is_relevant', models.BooleanField(db_index=True, default=False, help_text='Indicates if this taxon is relevant for the application. Will be shown first.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('common_name', models.CharField(blank=True, max_length=64, null=True)),
                ('common_name_en', models.CharField(blank=True, max_length=64, null=True)),
                ('common_name_es', models.CharField(blank=True, max_length=64, null=True)),
                ('common_name_ca', models.CharField(blank=True, max_length=64, null=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'tigacrafting', 'model__in': ('categories', 'complex', 'otherspecies')}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'taxon',
                'verbose_name_plural': 'taxa',
            },
        ),
        migrations.AddIndex(
            model_name='taxon',
            index=models.Index(fields=['content_type', 'object_id'], name='tigacraftin_content_583e94_idx'),
        ),
        migrations.AddConstraint(
            model_name='taxon',
            constraint=models.UniqueConstraint(fields=('name', 'rank'), name='unique_name_rank'),
        ),
        migrations.AddConstraint(
            model_name='taxon',
            constraint=models.UniqueConstraint(condition=models.Q(('depth', 1)), fields=('depth',), name='unique_root'),
        ),
        migrations.AddConstraint(
            model_name='taxon',
            constraint=models.UniqueConstraint(condition=models.Q(('content_type__isnull', False), ('object_id__isnull', False)), fields=('content_type', 'object_id'), name='unique_content_type_object_id'),
        ),
        migrations.RunPython(remove_duplicate_culex, migrations.RunPython.noop),
    ]