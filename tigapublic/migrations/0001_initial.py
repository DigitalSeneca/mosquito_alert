# Generated by Django 2.2.7 on 2020-06-22 13:38

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField()),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=75)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'User (municipalities)',
                'verbose_name_plural': 'User (provinces and municipalities)',
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapAuxReports',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('version_uuid', models.CharField(blank=True, max_length=36, unique=True)),
                ('user_id', models.CharField(blank=True, max_length=36)),
                ('observation_date', models.DateTimeField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('ref_system', models.CharField(blank=True, max_length=36)),
                ('type', models.CharField(blank=True, max_length=7)),
                ('t_q_1', models.CharField(blank=True, max_length=255)),
                ('t_a_1', models.CharField(blank=True, max_length=255)),
                ('t_q_2', models.CharField(blank=True, max_length=255)),
                ('t_a_2', models.CharField(blank=True, max_length=255)),
                ('t_q_3', models.CharField(blank=True, max_length=255)),
                ('t_a_3', models.CharField(blank=True, max_length=255)),
                ('s_q_1', models.CharField(blank=True, max_length=255)),
                ('s_a_1', models.CharField(blank=True, max_length=255)),
                ('s_q_2', models.CharField(blank=True, max_length=255)),
                ('s_a_2', models.CharField(blank=True, max_length=255)),
                ('s_q_3', models.CharField(blank=True, max_length=255)),
                ('s_a_3', models.CharField(blank=True, max_length=255)),
                ('s_q_4', models.CharField(blank=True, max_length=255)),
                ('s_a_4', models.CharField(blank=True, max_length=255)),
                ('expert_validated', models.NullBooleanField()),
                ('expert_validation_result', models.CharField(blank=True, max_length=100)),
                ('simplified_expert_validation_result', models.CharField(blank=True, max_length=100)),
                ('site_cat', models.IntegerField(blank=True, null=True)),
                ('storm_drain_status', models.CharField(blank=True, max_length=50)),
                ('edited_user_notes', models.CharField(blank=True, max_length=4000)),
                ('photo_url', models.CharField(blank=True, max_length=255)),
                ('photo_license', models.CharField(blank=True, max_length=100)),
                ('dataset_license', models.CharField(blank=True, max_length=100)),
                ('single_report_map_url', models.CharField(blank=True, max_length=255)),
                ('private_webmap_layer', models.CharField(blank=True, max_length=255)),
                ('final_expert_status', models.IntegerField()),
                ('note', models.TextField()),
                ('breeding_site_answers', models.CharField(blank=True, max_length=100)),
                ('mosquito_answers', models.CharField(blank=True, max_length=100)),
                ('n_photos', models.IntegerField(blank=True, null=True)),
                ('visible', models.BooleanField()),
            ],
            options={
                'db_table': 'map_aux_reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=36)),
                ('date_comment', models.DateTimeField(auto_now_add=True)),
                ('expert_comment', models.TextField(help_text='Text message sent to user', verbose_name='Expert comment')),
                ('expert_html', models.TextField(help_text='Expanded message informationgoes here. This field can contain HTML', verbose_name='Expert comment, expanded and allows html')),
                ('photo_url', models.TextField(blank=True, help_text='Relative url to the public reportphoto', null=True, verbose_name='Url to picture that originated the comment')),
                ('acknowledged', models.BooleanField(default=False, help_text='This is set to True throughthe public API, when the user signalsthat the message has been received')),
                ('public', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tigaserver_app_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationContent',
            fields=[
                ('id', models.AutoField(help_text='Unique identifier of the notification.Automatically generated by server when notificationcreated.', primary_key=True, serialize=False)),
                ('body_html_es', models.TextField(help_text='Expert comment, expanded andallows html, in spanish')),
                ('body_html_ca', models.TextField(blank=True, default=None, help_text='Expert comment, expanded andallows html, in catalan', null=True)),
                ('body_html_en', models.TextField(blank=True, default=None, help_text='Expert comment, expanded andallows html, in english', null=True)),
                ('title_es', models.TextField(help_text='Title of the comment, shown innon-detail view, in spanish')),
                ('title_ca', models.TextField(blank=True, default=None, help_text='Title of the comment, shown innon-detail view, in catalan', null=True)),
                ('title_en', models.TextField(blank=True, default=None, help_text='Title of the comment, shown innon-detail view, in english', null=True)),
            ],
            options={
                'db_table': 'tigaserver_app_notificationcontent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportsMapData',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('version_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('c', models.IntegerField()),
                ('observation_date', models.DateTimeField(blank=True, null=True)),
                ('expert_validation_result', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('month', models.CharField(blank=True, max_length=6)),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('geohashlevel', models.IntegerField()),
            ],
            options={
                'db_table': 'reports_map_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userfixes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fix_time', models.DateTimeField(blank=True, null=True)),
                ('masked_lon', models.FloatField(blank=True, null=True)),
                ('masked_lat', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tigaserver_app_fix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationImageFormModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/')),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('nomprov', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'provincies_4326',
            },
        ),
        migrations.CreateModel(
            name='ExtendedUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StormDrainUserVersions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField()),
                ('published_date', models.DateTimeField(default=datetime.datetime(2020, 6, 22, 13, 38, 50, 751988))),
                ('style_json', models.TextField()),
                ('visible', models.BooleanField()),
                ('title', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.AuthUser')),
            ],
            options={
                'db_table': 'tigapublic_storm_drain_user_version',
            },
        ),
        migrations.CreateModel(
            name='StormDrain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('icon', models.IntegerField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('municipality', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('water', models.NullBooleanField(max_length=10)),
                ('sand', models.NullBooleanField(max_length=10)),
                ('treatment', models.NullBooleanField(max_length=10)),
                ('species2', models.NullBooleanField(max_length=10)),
                ('species1', models.NullBooleanField(max_length=10)),
                ('activity', models.NullBooleanField(max_length=10)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('lon', models.DecimalField(decimal_places=6, max_digits=9)),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime(2020, 6, 22, 13, 38, 50, 749507), null=True)),
                ('original_lon', models.FloatField(blank=True, null=True)),
                ('original_lat', models.FloatField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=5, null=True)),
                ('model', models.CharField(blank=True, max_length=5, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.AuthUser')),
            ],
            options={
                'db_table': 'storm_drain',
            },
        ),
        migrations.CreateModel(
            name='PredefinedNotification',
            fields=[
                ('id', models.AutoField(help_text='Unique identifier ofthe notification. Automatically generated by serverwhen notification created.', primary_key=True, serialize=False)),
                ('body_html_es', models.TextField(help_text='Expert comment, expanded andallows html, in spanish')),
                ('body_html_ca', models.TextField(blank=True, default=None, help_text='Expert comment, expanded andallows html, in catalan', null=True)),
                ('body_html_en', models.TextField(blank=True, default=None, help_text='Expert comment, expanded andallows html, in english', null=True)),
                ('title_es', models.TextField(help_text='Title of the comment, shown innon-detail view, in spanish')),
                ('title_ca', models.TextField(blank=True, default=None, help_text='Title of the comment, shown innon-detail view, in catalan', null=True)),
                ('title_en', models.TextField(blank=True, default=None, help_text='Title of the comment, shown innon-detail view, in english', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.AuthUser')),
            ],
            options={
                'db_table': 'tigaserver_app_notificationpredefined',
            },
        ),
        migrations.CreateModel(
            name='ObservationNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=36)),
                ('date_comment', models.DateTimeField(auto_now_add=True)),
                ('expert_comment', models.TextField(help_text='Text message sent to user', verbose_name='Expert comment')),
                ('expert_html', models.TextField(help_text='Expanded message informationgoes here. This field can contain HTML', verbose_name='Expert comment, expanded and allows html')),
                ('public', models.BooleanField(default=False)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.AuthUser')),
                ('notification_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.NotificationContent')),
                ('preset_notification', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tigapublic.PredefinedNotification')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.MapAuxReports', to_field='version_uuid')),
            ],
            options={
                'db_table': 'tigapublic_map_notification',
            },
        ),
        migrations.CreateModel(
            name='Municipalities',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('municipality_id', models.IntegerField(unique=True)),
                ('nombre', models.CharField(blank=True, max_length=254)),
                ('tipo', models.CharField(blank=True, max_length=10)),
                ('pertenenci', models.CharField(blank=True, max_length=50)),
                ('codigoine', models.CharField(blank=True, max_length=5)),
                ('cod_ccaa', models.CharField(blank=True, max_length=2)),
                ('codprov', models.ForeignKey(db_column='codprov', on_delete=django.db.models.deletion.CASCADE, to='tigapublic.Province')),
            ],
            options={
                'db_table': 'municipis_4326',
            },
        ),
        migrations.CreateModel(
            name='Epidemiology',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('health_center', models.CharField(blank=True, max_length=225, null=True)),
                ('province', models.CharField(blank=True, max_length=225, null=True)),
                ('age', models.IntegerField()),
                ('country', models.CharField(blank=True, max_length=225, null=True)),
                ('date_arribal', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_symptom', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_notification', models.DateTimeField(blank=True, default=None, null=True)),
                ('patient_state', models.CharField(blank=True, max_length=225, null=True)),
                ('comments', models.TextField(blank=True, default=None, help_text='Extra comments for patients', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tigapublic.AuthUser')),
            ],
            options={
                'db_table': 'tigapublic_epidemiology',
            },
        ),
    ]
