# Generated by Django 4.0.8 on 2023-02-27 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('images', '0003_photo_taken_at_alter_photo_created_at'),
        ('taxa', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnotationAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128)),
                ('label_en', models.CharField(max_length=128, null=True)),
                ('label_ca', models.CharField(max_length=128, null=True)),
                ('label_es', models.CharField(max_length=128, null=True)),
                ('taxa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotation_attributes', to='taxa.taxon')),
            ],
            options={
                'verbose_name': 'annotation attribute',
                'verbose_name_plural': 'annotation attributes',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photos', models.ManyToManyField(blank=True, related_name='individuals', to='images.photo')),
                ('taxon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individuals', to='taxa.taxon')),
            ],
            options={
                'verbose_name': 'individual',
                'verbose_name_plural': 'individuals',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AnnotationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128)),
                ('label_en', models.CharField(max_length=128, null=True)),
                ('label_ca', models.CharField(max_length=128, null=True)),
                ('label_es', models.CharField(max_length=128, null=True)),
                ('annotation_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='individuals.annotationattribute')),
                ('taxa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotation_values', to='taxa.taxon')),
            ],
            options={
                'verbose_name': 'annotation value',
                'verbose_name_plural': 'annotation values',
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('annotation_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='annotations', to='individuals.annotationattribute')),
                ('annotation_value', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='annotations', to='individuals.annotationvalue')),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='individuals.individual')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'annotation',
                'verbose_name_plural': 'annotations',
            },
        ),
        migrations.AddConstraint(
            model_name='annotation',
            constraint=models.UniqueConstraint(fields=('user', 'individual', 'annotation_attribute'), name='unique_user_individual_annotation-attribute'),
        ),
    ]
