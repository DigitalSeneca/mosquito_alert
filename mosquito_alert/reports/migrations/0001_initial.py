# Generated by Django 4.2.3 on 2023-07-19 06:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone
import sortedm2m.fields
import taggit.managers
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("images", "0001_initial"),
        ("individuals", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geo", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "observed_at",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=django.utils.timezone.now
                            )
                        ],
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=django.utils.timezone.now
                            )
                        ],
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "location",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="geo.location",
                    ),
                ),
                (
                    "photos",
                    sortedm2m.fields.SortedManyToManyField(
                        blank=True, help_text=None, to="images.photo"
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags you can add to a report to make them easier to find.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "report",
                "verbose_name_plural": "reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BiteReport",
            fields=[
                (
                    "report_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.report",
                    ),
                ),
            ],
            options={
                "verbose_name": "bite report",
                "verbose_name_plural": "bite reports",
            },
            bases=("reports.report",),
        ),
        migrations.CreateModel(
            name="BreedingSiteReport",
            fields=[
                (
                    "report_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.report",
                    ),
                ),
                ("has_water", models.BooleanField()),
            ],
            options={
                "verbose_name": "breeding site report",
                "verbose_name_plural": "breeding site reports",
            },
            bases=("reports.report",),
        ),
        migrations.CreateModel(
            name="IndividualReport",
            fields=[
                (
                    "report_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.report",
                    ),
                ),
            ],
            options={
                "verbose_name": "report of an individual",
                "verbose_name_plural": "individual reports",
            },
            bases=("reports.report",),
        ),
        migrations.AddConstraint(
            model_name="report",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("created_at__lte", django.db.models.functions.datetime.Now())
                ),
                name="created_at_cannot_be_future_dated",
            ),
        ),
        migrations.AddConstraint(
            model_name="report",
            constraint=models.CheckConstraint(
                check=models.Q(("observed_at__lte", models.F("created_at"))),
                name="observed_at_cannot_be_after_created_at",
            ),
        ),
        migrations.AddField(
            model_name="individualreport",
            name="individual",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reports",
                to="individuals.individual",
            ),
        ),
    ]
