# Generated by Django 4.2.3 on 2023-07-19 06:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geo", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalSpecieDistribution",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("abs", "Absent"),
                            ("rep", "Reported"),
                            ("int", "Introduced"),
                            ("est", "Established"),
                        ],
                        max_length=3,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical specie distribution",
                "verbose_name_plural": "historical species distribution",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="SpecieDistribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("self", "Mosquito Alert"),
                            (
                                "ecdc",
                                "European Centre for Disease Prevention and Control",
                            ),
                        ],
                        max_length=8,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("abs", "Absent"),
                            ("rep", "Reported"),
                            ("int", "Introduced"),
                            ("est", "Established"),
                        ],
                        max_length=3,
                    ),
                ),
            ],
            options={
                "verbose_name": "specie distribution",
                "verbose_name_plural": "species distribution",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Taxon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                (
                    "rank",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Domain"),
                            (10, "Kingdom"),
                            (20, "Phylum"),
                            (30, "Class"),
                            (40, "Order"),
                            (50, "Family"),
                            (60, "Genus"),
                            (61, "Subgenus"),
                            (70, "Species complex"),
                            (71, "Species"),
                        ]
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("common_name", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "common_name_en",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "common_name_ca",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "common_name_es",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
            ],
            options={
                "verbose_name": "taxon",
                "verbose_name_plural": "taxa",
            },
        ),
        migrations.AddConstraint(
            model_name="taxon",
            constraint=models.UniqueConstraint(
                fields=("name", "rank"), name="unique_name_rank"
            ),
        ),
        migrations.AddConstraint(
            model_name="taxon",
            constraint=models.UniqueConstraint(
                condition=models.Q(("depth", 1)), fields=("depth",), name="unique_root"
            ),
        ),
        migrations.AddField(
            model_name="speciedistribution",
            name="boundary",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="distribution",
                to="geo.boundary",
            ),
        ),
        migrations.AddField(
            model_name="speciedistribution",
            name="taxon",
            field=models.ForeignKey(
                limit_choices_to={"rank__gte": 70},
                on_delete=django.db.models.deletion.PROTECT,
                related_name="distribution",
                to="taxa.taxon",
            ),
        ),
        migrations.AddField(
            model_name="historicalspeciedistribution",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="speciedistribution",
            constraint=models.UniqueConstraint(
                fields=("boundary", "taxon", "source"),
                name="unique_boundary_taxon_source",
            ),
        ),
    ]
