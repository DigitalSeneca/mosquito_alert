# Generated by Django 4.2.3 on 2023-07-19 06:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import mosquito_alert.identifications.mixins


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComputerVisionIdentificationSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "probability",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "computer vision identification suggestion",
                "verbose_name_plural": "computer vision identification suggestions",
            },
            bases=(
                mosquito_alert.identifications.mixins.MultipleIndividualIdentificationCandidateMixin,
                django_lifecycle.mixins.LifecycleModelMixin,
                mosquito_alert.identifications.mixins.ProbabilityTreeModelMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="IdentificationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "probability",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ]
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("com", "Community"), ("ens", "Ensembled")],
                        max_length=3,
                    ),
                ),
            ],
            options={
                "verbose_name": "identification result",
                "verbose_name_plural": "identification results",
                "default_related_name": "identification_results",
            },
            bases=(
                mosquito_alert.identifications.mixins.MultipleIndividualIdentificationCandidateMixin,
                mosquito_alert.identifications.mixins.ProbabilityTreeModelMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="IdentifierUserProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("is_superexpert", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "identifier user profile",
                "verbose_name_plural": "identifier user profiles",
            },
        ),
        migrations.CreateModel(
            name="ImageTaxonPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "probability",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name": "taxon image prediction",
                "verbose_name_plural": "taxon image prediction",
                "ordering": ["prediction_run", "-probability"],
            },
            bases=(
                mosquito_alert.identifications.mixins.ProbabilityTreeModelMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="ImageTaxonPredictionRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "taxon image prediction run",
                "verbose_name_plural": "taxon image predictions runs",
            },
        ),
        migrations.CreateModel(
            name="UserIdentificationSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "probability",
                    models.FloatField(
                        choices=[(1.0, "I'm sure"), (0.75, "I'm doubting.")],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "user identification suggestion",
                "verbose_name_plural": "user identification suggestions",
            },
            bases=(
                mosquito_alert.identifications.mixins.MultipleIndividualIdentificationCandidateMixin,
                django_lifecycle.mixins.LifecycleModelMixin,
                mosquito_alert.identifications.mixins.ProbabilityTreeModelMixin,
                models.Model,
            ),
        ),
    ]
