# Generated by Django 4.2.3 on 2023-12-01 12:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Flag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ("object_id", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=False)),
                ("count", models.PositiveIntegerField(default=0, editable=False)),
                ("moderated_at", models.DateTimeField(blank=True, editable=False, null=True)),
                (
                    "content_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"),
                ),
                (
                    "moderator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flags_moderated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Flag",
                "verbose_name_plural": "Flags",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FlagInstance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                (
                    "reason",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Spam | Exists only to promote a service"),
                            (2, "Abusive | Intended at promoting hatred"),
                            (100, "Something else."),
                        ]
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "flag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="flags", to="moderation.flag"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flags_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Flag Instance",
                "verbose_name_plural": "Flag Instances",
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="flaginstance",
            constraint=models.CheckConstraint(
                check=models.Q(("created_at__lte", django.db.models.functions.datetime.Now())),
                name="moderation_flaginstance_created_at_cannot_be_future_dated",
            ),
        ),
        migrations.AddConstraint(
            model_name="flaginstance",
            constraint=models.CheckConstraint(
                check=models.Q(("updated_at__lte", django.db.models.functions.datetime.Now())),
                name="moderation_flaginstance_updated_at_cannot_be_future_dated",
            ),
        ),
        migrations.AddConstraint(
            model_name="flaginstance",
            constraint=models.CheckConstraint(
                check=models.Q(("updated_at__gte", models.F("created_at"))),
                name="moderation_flaginstance_updated_at_must_be_after_created_at",
            ),
        ),
        migrations.AddConstraint(
            model_name="flaginstance",
            constraint=models.UniqueConstraint(fields=("flag", "user"), name="unique_flag_by_user"),
        ),
        migrations.AddConstraint(
            model_name="flag",
            constraint=models.CheckConstraint(
                check=models.Q(("created_at__lte", django.db.models.functions.datetime.Now())),
                name="moderation_flag_created_at_cannot_be_future_dated",
            ),
        ),
        migrations.AddConstraint(
            model_name="flag",
            constraint=models.CheckConstraint(
                check=models.Q(("updated_at__lte", django.db.models.functions.datetime.Now())),
                name="moderation_flag_updated_at_cannot_be_future_dated",
            ),
        ),
        migrations.AddConstraint(
            model_name="flag",
            constraint=models.CheckConstraint(
                check=models.Q(("updated_at__gte", models.F("created_at"))),
                name="moderation_flag_updated_at_must_be_after_created_at",
            ),
        ),
        migrations.AddConstraint(
            model_name="flag",
            constraint=models.UniqueConstraint(fields=("content_type", "object_id"), name="unique_by_content_object"),
        ),
    ]
