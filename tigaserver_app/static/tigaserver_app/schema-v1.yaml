openapi: 3.0.2
info:
  title: Mosquito Alert API
  version: 1.0
  description: Documentation for the Mosquito Alert server API
paths:
  /api/notification_content/:
    put:
      operationId: Updatenotification_content
      tags:
      - aima
      - notifications
      requestBody:
        description: Create NotificationContent object
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - body_html_en
                - title_en
              properties:
                body_html_en:
                  type: string
                  description: Notification body in english. Allows html.
                title_en:
                  type: string
                body_html_native:
                  type: string
                title_native:
                  type: string
                native_locale:
                  type: string
                notification_label:
                  type: string
      consumes:
        - application/json
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  body_html_en:
                    type: string
                  title_en:
                    type: string
                  body_html_native:
                    type: string
                  title_native:
                    type: string
                  native_locale:
                    type: string
                  notification_label:
                    type: string
          description: ''
  /api/send_notifications/:
    put:
      operationId: Updatesend_notifications
      tags:
      - aima
      - notifications
      requestBody:
        description: Send notification to single user, topic or group of users
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notification_content_id
                - user_id
                - recipients
                - ppush
              properties:
                notification_content_id:
                  type: integer
                  description: Id of notification content to be sent (must exist previously)
                user_id:
                  type: integer
                  description: Id of user which sends the notification
                ppush:
                  type: boolean
                  description: If true, a push notification is also sent
                recipients:
                  type: string
                  format: uuid
                  description: Target or targets for the notification. Can be 'all' (global notification), multiple uuids separated by '$', a single uuid, or a topic
                report_id:
                  type: string
                  format: uuid
                  description: UUID for the report associated to the notification
      consumes:
        - application/json
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  non_push_estimate_num:
                    type: integer
                    description: Number of non push messages sent. Useful for knowing the actual number of users when sent to topics
                  push_success:
                    type: bool
                    description: All push messsage where successfully sent.
          description: ''
  /api/mark_notif_as_ack/:
    delete:
      operationId: Destroymark_notif_as_ack
      summary: Marks a notification as read by a certain user
      tags:
      - notifications
      - apps
      parameters:
        - name: user
          required: true
          in: query
          description: User id for which the notification will be marked as read
          schema:
            type: string
        - name: notif
          required: true
          in: query
          description: Id of the notification which will be marked as read
          schema:
            type: integer
      responses:
        '204':
          description: 'If successful, the operation returns "no content"'
        '400':
          description: 'If either of both params was not supplied or if the ack defined by the combination of user and notif ids does not exist'
  /api/subscribe_to_topic/:
      post:
        operationId: Createsubscribe_to_topic
        summary: Subscribes a user to a given topic
        tags:
        - notifications
        - apps
        description: This endpoint subscribes a user to a given topic. A topic behaves like a mail list,
          and if a push notification is sent to a topic, all users subscribed to this topic will receive the
          notification.
        parameters:
        - name: user
          required: true
          in: query
          description: User id for which the subscription will be performed
          schema:
            type: string
        - name: code
          required: true
          in: query
          description: Code of the topic the user will be subscribed to
          schema:
            type: string
        responses:
          '201':
            content:
              application/json:
                schema:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                        description: The id of the subscription
                      user:
                        type: string
                        description: UUID of the subscribed user
                      topic:
                        type: integer
                        description: Id of the subscribed topic
                      topic_code:
                        type: string
                        description: String with the topic code
            description: 'Subscription correctly performed'
          '400':
            description: 'In any of the following cases: user indicated by user id param does not exist, or if the user is already subscribed'
  /api/unsub_from_topic/:
      post:
        summary: Unsubscribes a user from a topic
        description: This call removes the subscription of a user to a given topic, meaning that the user will not receive any more push notifications
          sent to the topic.
        tags:
          - notifications
          - apps
        operationId: Createunsub_from_topic
        parameters:
        - name: user
          required: true
          in: query
          description: User id for which the subscription will be removed
          schema:
            type: string
        - name: code
          required: true
          in: query
          description: Code of the topic the user will be removed from
          schema:
            type: string
        responses:
          '204':
            description: 'In case the user is successfully unsubscribed'
          '400':
            description: 'In case any of the parameters is missing, or the user was not subscibed to the topic, or the user indicated by user param does not exist'
  /api/topics_subscribed/:
    get:
      summary: List the topics a user is subscribed to
      description: A user can be subscribed to any number of topics. This endpoint lists all current subscriptions of a given user.
      tags:
        - notifications
        - apps
      operationId: listtopics_subscribeds
      parameters:
        - name: user
          required: true
          in: query
          description: User id for which the subscriptions will be listed
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                      description: 'Subscription id'
                    user:
                      type: string
                      description: 'User uuid of the user'
                    topic:
                      type: integer
                      description: 'topic id'
                    topic_code:
                      type: string
                      description: 'Topic code'
          description: 'Success and returns a list of the subscriptions'
        '400':
          description: 'Either the user param was not supplied or the user associated with it does not exist'
  /api/token/:
    post:
      operationId: Createtoken
      summary: Links an FCM token to a user or device
      tags:
        - notifications
        - apps
      description: This call fills the field token in the user table. This allows the user to receive direct FCM push notifications.
      parameters:
        - name: user_id
          required: true
          in: query
          description: The uuid identifying the user or device
          schema:
            type: string
        - name: token
          required: true
          in: query
          description: The FCM token obtained after registering the user to the messaging service
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                    description: 'Returns the successfully registered token'
          description: 'The call was successful and the user id and token are now linked'
        '400':
          description: 'If any of the parameters are missing'
        '404':
          description: 'If the user identified by the parameter user_id does not exist'
  /api/user_notifications/:
    post:
      deprecated: true
      operationId: notification_update
      summary: Marks notification as read
      tags:
        - apps
      description: Creates a record which indicates that the user has tapped on a notification message in the app
      parameters:
        - name: id
          required: true
          in: query
          description: id of the notification to be marked as acknowledged
          schema:
            type: integer
        - name: acknowledged
          required: false
          in: query
          description: The value of acknowledged (either True, False or ignore to leave untouched)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    report_id:
                      type: string
                      description: 'Id of the report which originated this notification. Can be null.'
                    user_id:
                      type: string
                      description: 'Id of the user to which the notification was sent. Can be null, if the notification was sent to a topic.'
                    topic:
                      type: string
                      description: 'Topic code (lower case, no special chars) to which the notification was sent. Can be null, if the notification was sent to a user.'
                    user_score:
                      type: integer
                      description: 'Value for old user score. Ignore this field because it is deprecated and only present for backwards compatibility'
                    user_score_label:
                      type: string
                      description: 'Can be user_score_pro, user_score_advanced or user_score_beginner. Categorized string for user_score. Also deprecated'
                    expert_id:
                      type: integer
                      description: 'User id for the user(expert) that sent the notification.'
                    date_comment:
                      type: string
                      format: date-time
                      description: 'ISO timestamp for when the notification was issued, server time.'
                    expert_comment:
                      type: string
                      description: 'Plain text with the notification title.'
                    expert_html:
                      type: string
                      description: 'HTML Text with the full notification body.'
                    acknowledged:
                      type: boolean
                      description: 'Boolean fields which says if the user tapped on the notification in the mobile apps. If true, the user opened the notification. If false, the notification is unread.'
                    public:
                      type: boolean
                      description: 'Boolean fields which indicates if this notification can be shown on the public map.'
    get:
      operationId: listuser_notifications
      summary: Returns a list of notifications sent to a given user, by uuid
      tags:
        - notifications
        - apps
      description: Returns a list of notifications sent to a given user, by uuid. All the notifications are at least translated to english and maybe to a second
        language. If this is the case and the locale parameter is sent, the text will be shown in this locale. If not, the language will default to english.
      parameters:
        - name: user_id
          required: true
          in: query
          description: The returned list will include only notifications sent to the user represented with the supplied id
          schema:
            type: string
        - name: locale
          required: false
          in: query
          description: Two letter language code in which the notification list will be shown. If the notification has not been translated to
            the desired language, it defaults to english (which is mandatory and always present)
          schema:
            type: string
            enum: ['es','ca','en','de','sq','el','hu','pt','sl','it','fr','bg','ro','hr','mk','sr','lb','nl','tr']
        - name: acknowledged
          required: false
          in: query
          description: This parameter acts as a filter parameter. If not specified, all notifications are returned. If 'false', only unread
            notifications will be returned. If 'true', only read notifications will be returned.
          schema:
            type: string
            enum: ['true','false']
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    report_id:
                      type: string
                      description: 'Id of the report which originated this notification. Can be null.'
                    user_id:
                      type: string
                      description: 'Id of the user to which the notification was sent. Can be null, if the notification was sent to a topic.'
                    topic:
                      type: string
                      description: 'Topic code (lower case, no special chars) to which the notification was sent. Can be null, if the notification was sent to a user.'
                    user_score:
                      type: integer
                      description: 'Value for old user score. Ignore this field because it is deprecated and only present for backwards compatibility'
                    user_score_label:
                      type: string
                      description: 'Can be user_score_pro, user_score_advanced or user_score_beginner. Categorized string for user_score. Also deprecated'
                    expert_id:
                      type: integer
                      description: 'User id for the user(expert) that sent the notification.'
                    date_comment:
                      type: string
                      format: date-time
                      description: 'ISO timestamp for when the notification was issued, server time.'
                    expert_comment:
                      type: string
                      description: 'Plain text with the notification title.'
                    expert_html:
                      type: string
                      description: 'HTML Text with the full notification body.'
                    acknowledged:
                      type: boolean
                      description: 'Boolean fields which says if the user tapped on the notification in the mobile apps. If true, the user opened the notification. If false, the notification is unread.'
                    public:
                      type: boolean
                      description: 'Boolean fields which indicates if this notification can be shown on the public map.'
  /api/organizationpins/:
    get:
      operationId: listOrganizationPins
      summary: Returns a list of organizations with a text description and URL, to be drawn in a map.
      description: List of organizations with a geographical location. Each of these organizations has a link to a
            web page with the detailed information. The text in textual_description should be shown in a pin dialog in a map
      tags:
      - apps
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    point:
                      type: string
                      readOnly: true
                      description: Geographical location of the point. Lat is latitude, Lon is longitude. All coordinates
                        are in EPSG:4326 projection.
                    textual_description:
                      type: string
                      description: Text desription on the pin. This text is meant
                        to be visualized as the text body of the dialog on the map
                    page_url:
                      type: string
                      format: uri
                      description: URL link to the organization page
                      maxLength: 200
                      pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                        d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                        [[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                        -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                        .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
                        .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\Z"
                  required:
                  - textual_description
                  - page_url
  /api/owcampaigns/:
    get:
      operationId: listOWCampaigns
      summary: Returns a list of all the overwintering campaigns
      description: Each overwintering campaigns takes place in a given european country between a start and end dates. 
        There can be multiple campaigns for each country, but the start and end dates should never overlap.
      tags:
      - overwintering
      - apps
      parameters:      
      - name: country_id
        required: false
        in: query
        description: The returned list will include only campaigns in countries with the supplied id
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    country:
                      properties:
                        gid:
                          type: integer
                          maximum: 2147483647
                          minimum: -2147483648
                        name_engl:
                          type: string
                          maxLength: 44
                      required:
                      - gid
                      type: object
                    posting_address:
                      type: string
                      description: 'Full posting address of the place where the samples
                        will be sent'
                    campaign_start_date:
                      type: string
                      format: date-time
                      description: 'Date when the campaign starts. No samples should
                        be collected BEFORE this date.'
                    campaign_end_date:
                      type: string
                      format: date-time
                      description: 'Date when the campaign ends. No samples should
                        be collected AFTER this date.'
                  required:
                  - country
                  - posting_address
                  - campaign_start_date
                  - campaign_end_date          
  /api/score_v2/:
    get:
      operationId: listuser_score_v2s
      summary: 'Returns score v2 details for a user given its uuid'
      description: 'Calculates and updates user score for a given user uuid. If the uuid is part of a profile, it updates the scores of all involved uuids'
      tags:
      - score
      parameters:      
      - name: user_id
        required: true
        in: query
        description: 'User uuid for which the v2 score will be calculated'
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
          description: ''
  /api/photos_user/:
    get:
      operationId: listget_photos
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/configuration/:
    get:
      operationId: listget_current_configurations
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''  
  /api/report_stats/:
    get:
      operationId: listreport_stats
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/user_count/:
    get:
      operationId: listuser_counts
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/user_score/:
    get:
      operationId: listuser_scores
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: Createuser_score
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/nearby_reports/:
    get:
      operationId: listnearby_reports
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/nearby_reports_fast/:
    get:
      operationId: listnearby_reports_fasts
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/nearby_reports_nod/:
    get:
      operationId: listnearby_reports_no_dwindows
      summary: 'Returns reports in a radius specified by coordinates supplied by the user'
      description: 'Returns the reports closer to a point specified by coordinates, within a radius of default size 5000 meters. If a user_uuid is supplied, the endpoint also returns all reports from the user'
      parameters:
        - name: page
          required: false
          in: query
          description: 'Pagination param, indicates page number of results. Defaults to 1'
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: 'Pagination param, indicates page size. Defaults to 10'
          schema:
            type: integer
        - name: show_hidden
          required: false
          in: query
          description: 'Wether to show or not deleted (version number == -1) reports. Defaults to 0 (do not show)'
          schema:
            type: integer
        - name: lat
          required: true
          in: query
          description: 'Latitude in decimal degrees of the buffer center'
          schema:
            type: float
        - name: lon
          required: true
          in: query
          description: 'Longitude in decimal degrees of the buffer center'
          schema:
            type: float
        - name: user
          required: false
          in: query
          description: 'User uuid of a given user. If supplied, the endpoint ensures that all reports belonging to the user are returned'
          schema:
            type: uuid
        - name: radius
          required: false
          in: query
          description: 'Radius in meters from the point specified by lat/lon where the reports will be returned. It defaults to 5000 meters'
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  user_uuids:
                    type: array
                    items:
                      properties:
                        user_uuid:
                          type: string
                          description: 'User uuids belonging to same user'
                  count:
                    type: integer
                    description: 'Number of returned records'
                  next:
                    type: integer
                    description: 'Next page number if available. If not, null'
                  previous:
                    type: integer
                    description: 'Previous page number if available. If not, null'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'
  /api/reports_id_filtered/:
    get:
      operationId: listreports_id_filtereds
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/uuid_list_autocomplete/:
    get:
      operationId: listuuid_list_autocompletes
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/missions/:
    get:
      operationId: listget_new_missions
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/cfs_reports/:
    get:
      operationId: listforce_refresh_cfs_reports
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/cfa_reports/:
    get:
      operationId: listforce_refresh_cfa_reports
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/workload_data/user/:
    get:
      operationId: listworkload_stats_per_users
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/workload_data/report_input/:
    get:
      operationId: listworkload_daily_report_inputs
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/workload_data/pending/:
    get:
      operationId: listworkload_pending_per_users
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/workload_data/available/:
    get:
      operationId: listworkload_available_reports
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/speedmeter/:
    get:
      operationId: listspeedmeter_apis
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/hashtag_map_data/:
    get:
      operationId: listget_hashtag_map_datas
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/stats/user_xp_data/:
    get:
      operationId: listget_user_xp_datas
      summary: 'Returns the xp data belonging to a user'
      description: 'This function returns a json structure containing all relevant info related to a user score. The user score
      is cached and updated at regular intervals for users with activity (i.e new reports) since last update'
      tags:
        - apps
      parameters:
      - name: user_id
        required: true
        in: query
        description: 'UUID of the user for which the xp data will be evaluated and returned'
        schema:
          type: string
      - name: locale
        required: false
        in: query
        description: 'Locale code for the language used in the translatable labels inside of the structure (i.e user
        rank name). If not supplied or if the locale it''s unavailable, it defaults to "en" (english)'
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
  /api/users/:
    get:
      operationId: listTigaUsers
      parameters:
      - name: user_UUID
        required: false
        in: query
        description: user_UUID
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    user_UUID:
                      type: string
                      description: UUID randomly generated on phone to identify each
                        unique user. Must be exactly 36 characters (32 hex digits
                        plus 4 hyphens).
                      maxLength: 36
                  required:
                  - user_UUID
          description: ''
    post:
      operationId: createTigaUser
      summary: 'Creates a new tigauser'
      description: 'Creates a new tigauser. The user_uuid param is generated randomly on the phone and registered on the server.'
      tags:
        - apps
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_UUID:
                  type: string
                  description: UUID randomly generated on phone to identify each unique
                    user. Must be exactly 36 characters (32 hex digits plus 4 hyphens).
                  maxLength: 36
              required:
              - user_UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  user_UUID:
                    type: string
                    description: UUID randomly generated on phone to identify each
                      unique user. Must be exactly 36 characters (32 hex digits plus
                      4 hyphens).
                    maxLength: 36
                required:
                - user_UUID
  /api/addresses/:
    get:
      operationId: listUsers
      parameters:
      - name: first_name
        required: false
        in: query
        description: first_name
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    first_name:
                      type: string
                      maxLength: 30
                    last_name:
                      type: string
                      maxLength: 150
                    username:
                      type: string
                      description: Required. 150 characters or fewer. Letters, digits
                        and @/./+/-/_ only.
                      pattern: ^[\w.@+-]+$
                      maxLength: 150
                  required:
                  - username
          description: ''
  /api/reports/:
    get:
      operationId: listReports
      parameters:
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: version_number
        required: false
        in: query
        description: version_number
        schema:
          type: string
      - name: report_id
        required: false
        in: query
        description: report_id
        schema:
          type: string
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
#                  properties:
#                    version_UUID:
#                      type: string
#                    version_number:
#                      type: integer
#                    report_id:
#                      type: string
#                    phone_upload_time:
#                      type: string
#                      format: date-time
#                    creation_time:
#                      type: string
#                      format: date-time
#                    version_time:
#                      type: string
#                      format: date-time
#                    type:
#                      type: string
#                    location_choice:
#                      type: string
#                    current_location_lon:
#                      type: number
#                    current_location_lat:
#                      type: number
#                    selected_location_lon:
#                      type: number
#                    selected_location_lat:
#                      type: number
#                    note:
#                      type: string
#                    package_name:
#                      type: string
#                    package_version:
#                      type: integer
#                    device_manufacturer:
#                      type: string
#                    device_model:
#                      type: string
#                    os:
#                      type: string
#                    os_version:
#                      type: string
#                    os_language:
#                      type: string
#                    app_language:
#                      type: string
#                    responses:
#                      type: array
#                      items:
#                        properties:
#                          question:
#                            type: string
#                            description: Question that the user responded to.
#                            maxLength: 1000
#                          answer:
#                            type: string
#                            description: Answer that user selected.
#                            maxLength: 1000
#                          question_id:
#                            type: integer
#                            maximum: 2147483647
#                            minimum: -2147483648
#                            nullable: true
#                            description: Numeric identifier of the question.
#                          answer_id:
#                            type: integer
#                            maximum: 2147483647
#                            minimum: -2147483648
#                            nullable: true
#                            description: Numeric identifier of the answer.
#                          answer_value:
#                            type: string
#                            nullable: true
#                            description: 'The value right now can contain 2 things:
#                              an integer representing the number or bites, or either
#                              a WKT representation of a point for a location answer.
#                              In all other cases, it will be blank'
#                            maxLength: 1000
#                        required:
#                        - question
#                        - answer
#                    server_upload_time:
#                      type: string
#                      format: date-time
#                      readOnly: true
#                      description: Date and time on server when report uploaded. (Automatically
#                        generated by server.)
#                    hide:
#                      type: boolean
#                      description: Hide this report from public views?
#                    cached_visible:
#                      type: integer
#                      maximum: 2147483647
#                      minimum: -2147483648
#                      nullable: true
#                      description: Precalculated value of show_on_map_function
#                    point:
#                      type: string
#                      nullable: true
#                    user:
#                      type: string
#                      description: user_UUID for the user sending this report. Must
#                        be exactly 36 characters (32 hex digits plus 4 hyphens) and
#                        user must have already registered this ID.
#                    mission:
#                      type: integer
#                      nullable: true
#                      description: If this report was a response to a mission, the
#                        unique id field of that mission.
#                    country:
#                      type: string
#                      nullable: true
#                    session:
#                      type: integer
#                      nullable: true
#                      description: 'Session ID for session in which this report was
#                        created '
#                  required:
#                  - version_UUID
#                  - version_number
#                  - report_id
#                  - phone_upload_time
#                  - creation_time
#                  - version_time
#                  - type
#                  - location_choice
#                  - responses
#                  - user
#          description: ''
    post:
      operationId: createReport
      summary: 'Creates a new report'
      description: 'The summary is descriptive enough, this is the main endpoint used to upload reports to the server'
      tags:
        - apps
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
          description: ''
  /api/sessions/:
    get:
      operationId: listSessions
      summary: 'Session listing endpoint'
      description: 'Can list a single session by session id or the list of sessions for a user by user_uuid'
      tags:
        - apps
      parameters:
      - name: id
        required: false
        in: query
        description: 'Filter parameter. If supplied, the endpoint returns a single result or an empty list if not found'
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: 'User id filter. If supplied, the endpoint returns a list of all the sessions of the user'
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                      description: Unique identifier of the session. Automatically
                        generated by server when session created.
                    session_ID:
                      type: integer
                      maximum: 2147483647
                      minimum: -2147483648
                      description: The session ID number. Should be an integer that
                        increments by 1 for each session from a given user.
                    user:
                      type: string
                      format: uuid
                      description: user_UUID for the user sending this report. Must
                        be exactly 36 characters (32 hex digits plus 4 hyphens) and
                        user must have already registered this ID.
                    session_start_time:
                      type: string
                      format: date-time
                      description: Date and time on phone when the session was started.
                        Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                    session_end_time:
                      type: string
                      format: date-time
                      nullable: true
                      description: Date and time on phone when the session was ended.
                        Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  required:
                  - session_ID
                  - user
                  - session_start_time
          description: ''
    post:
      operationId: createSession
      summary: 'Creates a new session'
      description: 'Creates a session. A new session is created each time a user starts forming a report on the app, and
      closes when the user ends filling and uploading the report'
      tags:
        - apps
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_ID:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: The session ID number. Should be an integer that increments
                    by 1 for each session from a given user.
                user:
                  type: string
                  format: uuid
                  description: user_UUID for the user sending this report. Must be
                    exactly 36 characters (32 hex digits plus 4 hyphens) and user
                    must have already registered this ID.
                session_start_time:
                  type: string
                  format: date-time
                  description: Date and time on phone when the session was started.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                session_end_time:
                  type: string
                  format: date-time
                  nullable: true
                  description: Date and time on phone when the session was ended.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
              required:
              - session_ID
              - user
              - session_start_time
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                    description: Unique identifier of the session. Automatically generated
                      by server when session created.
                  session_ID:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: The session ID number. Should be an integer that
                      increments by 1 for each session from a given user.
                  user:
                    type: string
                    format: uuid
                    description: user_UUID for the user sending this report. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens) and
                      user must have already registered this ID.
                  session_start_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when the session was started.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  session_end_time:
                    type: string
                    format: date-time
                    nullable: true
                    description: Date and time on phone when the session was ended.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                required:
                - session_ID
                - user
                - session_start_time
          description: ''
  /api/sessions/{id}/:
    get:
      operationId: retrieveSession
      parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the session. Automatically generated by
          server when session created.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                    description: Unique identifier of the session. Automatically generated
                      by server when session created.
                  session_ID:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: The session ID number. Should be an integer that
                      increments by 1 for each session from a given user.
                  user:
                    type: string
                    description: user_UUID for the user sending this report. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens) and
                      user must have already registered this ID.
                  session_start_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when the session was started.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  session_end_time:
                    type: string
                    format: date-time
                    nullable: true
                    description: Date and time on phone when the session was ended.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                required:
                - session_ID
                - user
                - session_start_time
          description: ''
    put:
      operationId: updateSession
      parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the session. Automatically generated by
          server when session created.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_ID:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: The session ID number. Should be an integer that increments
                    by 1 for each session from a given user.
                user:
                  type: string
                  description: user_UUID for the user sending this report. Must be
                    exactly 36 characters (32 hex digits plus 4 hyphens) and user
                    must have already registered this ID.
                session_start_time:
                  type: string
                  format: date-time
                  description: Date and time on phone when the session was started.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                session_end_time:
                  type: string
                  format: date-time
                  nullable: true
                  description: Date and time on phone when the session was ended.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
              required:
              - session_ID
              - user
              - session_start_time
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                    description: Unique identifier of the session. Automatically generated
                      by server when session created.
                  session_ID:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: The session ID number. Should be an integer that
                      increments by 1 for each session from a given user.
                  user:
                    type: string
                    description: user_UUID for the user sending this report. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens) and
                      user must have already registered this ID.
                  session_start_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when the session was started.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  session_end_time:
                    type: string
                    format: date-time
                    nullable: true
                    description: Date and time on phone when the session was ended.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                required:
                - session_ID
                - user
                - session_start_time
          description: ''
    patch:
      operationId: partial_updateSession
      parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the session. Automatically generated by
          server when session created.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_ID:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: The session ID number. Should be an integer that increments
                    by 1 for each session from a given user.
                user:
                  type: string
                  description: user_UUID for the user sending this report. Must be
                    exactly 36 characters (32 hex digits plus 4 hyphens) and user
                    must have already registered this ID.
                session_start_time:
                  type: string
                  format: date-time
                  description: Date and time on phone when the session was started.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                session_end_time:
                  type: string
                  format: date-time
                  nullable: true
                  description: Date and time on phone when the session was ended.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                    description: Unique identifier of the session. Automatically generated
                      by server when session created.
                  session_ID:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: The session ID number. Should be an integer that
                      increments by 1 for each session from a given user.
                  user:
                    type: string
                    description: user_UUID for the user sending this report. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens) and
                      user must have already registered this ID.
                  session_start_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when the session was started.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  session_end_time:
                    type: string
                    format: date-time
                    nullable: true
                    description: Date and time on phone when the session was ended.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                required:
                - session_ID
                - user
                - session_start_time
          description: ''
    delete:
      operationId: destroySession
      parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the session. Automatically generated by
          server when session created.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '204':
          description: ''
  /api/photos/:
    get:
      operationId: listPhotos
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    photo:
                      type: string
                      description: Photo uploaded by user.
                    report:
                      type: string
                      description: Report and version to which this photo is associated
                        (36-digit report_UUID).
                  required:
                  - photo
                  - report
          description: ''
    post:
      operationId: createPhoto
      summary: 'Uploads a photo to the server'
      description: 'API endpoint for uploading photos associated with a report. Data must be posted as multipart form,
      with with _photo_ used as the form key for the file itself, and _report_ used as the key for the report
      version_UUID linking this photo to a specific report version.'
      tags:
        - apps
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                photo:
                  type: string
                  format: binary
                  description: Photo uploaded by user.
                report:
                  type: string
                  format: uuid
                  description: Report and version to which this photo is associated
                    (36-digit report_UUID).
              required:
              - photo
              - report
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  photo:
                    type: string
                    description: Photo uploaded by user.
                  report:
                    type: string
                    description: Report and version to which this photo is associated
                      (36-digit report_UUID).
                required:
                - photo
                - report
          description: ''
  /api/fixes/:
    get:
      operationId: listFixs
      parameters:
      - name: user_coverage_uuid
        required: false
        in: query
        description: user_coverage_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Fix"
    post:
      operationId: createFix
      summary: 'API endpoint for getting and posting masked location fixes.'
      description: 'API endpoint for uploading photos associated with a report. Data must be posted as multipart form,
      with with _photo_ used as the form key for the file itself, and _report_ used as the key for the report
      version_UUID linking this photo to a specific report version.'
      tags:
        - apps
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fix"
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  user_coverage_uuid:
                    type: string
                    nullable: true
                    description: UUID randomly generated on phone to identify each
                      unique user, but only within the coverage data so that privacy
                      issues are not raised by linking this to the report data.. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens).
                    maxLength: 36
                  fix_time:
                    type: string
                    format: date-time
                    description: Date and time when fix was recorded on phone. Format
                      as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  phone_upload_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when it uploaded fix. Format
                      as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  masked_lon:
                    type: number
                    description: Longitude rounded down to nearest 0.5 decimal degree
                      (floor(lon/.5)*.5).
                  masked_lat:
                    type: number
                    description: Latitude rounded down to nearest 0.5 decimal degree
                      (floor(lat/.5)*.5).
                  power:
                    type: number
                    nullable: true
                    description: 'Power level of phone at time fix recorded, expressed
                      as proportion of full charge. Range: 0-1.'
                  mask_size:
                    type: number
                    nullable: true
                    description: size of location mask used
                required:
                - fix_time
                - phone_upload_time
                - masked_lon
                - masked_lat
          description: ''
  /api/coverage_month/:
    get:
      operationId: listCoverageAreaMonths
      parameters:
      - name: id_range_start
        required: false
        in: query
        description: id_range_start
        schema:
          type: string
      - name: id_range_end
        required: false
        in: query
        description: id_range_end
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    lat:
                      type: number
                    lon:
                      type: number
                    year:
                      type: integer
                      maximum: 2147483647
                      minimum: -2147483648
                    month:
                      type: integer
                      maximum: 2147483647
                      minimum: -2147483648
                    n_fixes:
                      type: integer
                      maximum: 2147483647
                      minimum: 0
                  required:
                  - lat
                  - lon
                  - year
                  - month
                  - n_fixes
          description: ''
  /api/all_reports/:
    get:
      operationId: listReports
      parameters:
      - name: day
        required: false
        in: query
        description: day
        schema:
          type: string
      - name: week
        required: false
        in: query
        description: week
        schema:
          type: string
      - name: month
        required: false
        in: query
        description: month
        schema:
          type: string
      - name: year
        required: false
        in: query
        description: year
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
          description: ''
  /api/all_reports_paginated/:
    get:
      operationId: listReports
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: day
        required: false
        in: query
        description: day
        schema:
          type: string
      - name: week
        required: false
        in: query
        description: week
        schema:
          type: string
      - name: month
        required: false
        in: query
        description: month
        schema:
          type: string
      - name: year
        required: false
        in: query
        description: year
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'
          description: ''
  /api/hidden_reports/:
    get:
      operationId: listReports
      parameters:
      - name: day
        required: false
        in: query
        description: day
        schema:
          type: string
      - name: week
        required: false
        in: query
        description: week
        schema:
          type: string
      - name: month
        required: false
        in: query
        description: month
        schema:
          type: string
      - name: year
        required: false
        in: query
        description: year
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
          description: ''
  /api/tags/:
    get:
      operationId: listTags
      parameters:
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 100
                  required:
                  - name
          description: ''
  /en/stats/workload/:
    get:
      operationId: listworkload_stats
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /en/stats/workload/{country_id}/:
    get:
      operationId: Retrieveworkload_stats
      parameters:
      - name: country_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /en/experts/status/reports/pending:
    get:
      operationId: listexpert_report_pendings
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /en/experts/status/reports/complete:
    get:
      operationId: listexpert_report_completes
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /en/metadataPhotoInfo:
    get:
      operationId: listmetadataPhotos
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''  
  /api/msg_ios/:
    post:
      operationId: Createmsg_ios
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/msg_android/:
    post:
      operationId: Createmsg_android
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/session_update/{id}/:
    put:
      operationId: UpdateSession
      summary: 'API endpoint for updating existing session.'
      description: 'Usually used to close a session by setting the field session_end_time'
      tags:
        - apps
      parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the session. Automatically generated by
          server when session created.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_ID:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: The session ID number. Should be an integer that increments
                    by 1 for each session from a given user.
                user:
                  type: string
                  format: uuid
                  description: user_UUID for the user sending this report. Must be
                    exactly 36 characters (32 hex digits plus 4 hyphens) and user
                    must have already registered this ID.
                session_start_time:
                  type: string
                  format: date-time
                  description: Date and time on phone when the session was started.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                session_end_time:
                  type: string
                  format: date-time
                  nullable: true
                  description: Date and time on phone when the session was ended.
                    Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
              required:
              - session_ID
              - user
              - session_start_time
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                    description: Unique identifier of the session. Automatically generated
                      by server when session created.
                  session_ID:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: The session ID number. Should be an integer that
                      increments by 1 for each session from a given user.
                  user:
                    type: string
                    format: uuid
                    description: user_UUID for the user sending this report. Must
                      be exactly 36 characters (32 hex digits plus 4 hyphens) and
                      user must have already registered this ID.
                  session_start_time:
                    type: string
                    format: date-time
                    description: Date and time on phone when the session was started.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                  session_end_time:
                    type: string
                    format: date-time
                    nullable: true
                    description: Date and time on phone when the session was ended.
                      Format as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
                required:
                - session_ID
                - user
                - session_start_time
          description: ''

components:
  schemas:
    Report:
      type: object
      properties:
        version_UUID:
          type: string
        version_number:
          type: integer
        report_id:
          type: string
        phone_upload_time:
          type: string
          format: date-time
        creation_time:
          type: string
          format: date-time
        version_time:
          type: string
          format: date-time
        type:
          type: string
        location_choice:
          type: string
        current_location_lon:
          type: number
        current_location_lat:
          type: number
        selected_location_lon:
          type: number
        selected_location_lat:
          type: number
        note:
          type: string
        package_name:
          type: string
        package_version:
          type: integer
        device_manufacturer:
          type: string
        device_model:
          type: string
        os:
          type: string
        os_version:
          type: string
        os_language:
          type: string
        app_language:
          type: string
        responses:
          type: array
          items:
            properties:
              question:
                type: string
                description: Question that the user responded to.
                maxLength: 1000
              answer:
                type: string
                description: Answer that user selected.
                maxLength: 1000
              question_id:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
                description: Numeric identifier of the question.
              answer_id:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
                description: Numeric identifier of the answer.
              answer_value:
                type: string
                nullable: true
                description: 'The value right now can contain 2 things:
                                    an integer representing the number or bites, or either
                                    a WKT representation of a point for a location answer.
                                    In all other cases, it will be blank'
                maxLength: 1000
            required:
              - question
              - answer
        server_upload_time:
          type: string
          format: date-time
          readOnly: true
          description: Date and time on server when report uploaded. (Automatically
            generated by server.)
        hide:
          type: boolean
          description: Hide this report from public views?
        cached_visible:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Precalculated value of show_on_map_function
        point:
          type: string
          nullable: true
        user:
          type: string
          format: uuid
          description: user_UUID for the user sending this report. Must
            be exactly 36 characters (32 hex digits plus 4 hyphens) and
            user must have already registered this ID.
        mission:
          type: integer
          nullable: true
          description: If this report was a response to a mission, the
            unique id field of that mission.
        country:
          type: string
          nullable: true
        session:
          type: integer
          nullable: true
          description: 'Session ID for session in which this report was created'
    ScoreSection:
      type: object
      description: 'Score details by category (site,adult or bite)'
      properties:
        score:
          type: integer
          description: 'Accumulated mosquito reports score for the given category (site,adult or bite). It''s the sum of all xp given by each of the awards, minus the sum of all penalties'
        score_items:
          type: array
          items:
            properties:
              report:
                type: string
                description: 'Report uuid'
              report_date:
                type: string
                format: date-time
                description: 'Report creation time'
              report_score:
                type: integer
                description: 'Accumulated score granted by this report'
              awards:
                type: array
                description: 'List of awards granted to this report'
                items:
                  properties:
                    reason:
                      type: string
                      description: 'brief description of why this award was given'
                    xp_awarded:
                      type: integer
                      description: 'number of xp awarded to this report according to the reason previously stated'
              penalties:
                type: array
                description: 'List of penalties granted to this report'
                items:
                  properties:
                    reason:
                      type: string
                      description: 'brief description of why this penalty was imposed'
                    xp_awarded:
                      type: integer
                      description: 'number of xp substracted from this report according to the reason previously stated'
              report_photo:
                type: string
                description: 'url to the photo associated with this report, if available (not hidden)'
    Score:
      type: object
      properties:
        total_score:
          type: integer
          description: 'Accumulated score of the user. Equals the sum of scores given by adult + site reports'
        user_uuid:
          type: string
          format: uuid
          description: 'Uuid of the user for which the score is being asked'
        identicon:
          type: string
          description: 'Relative path to the user identicon'
        score_detail:
          type: object
          description: 'Contains the detailed info regarding the user score'
          properties:
            adult:
              $ref: '#/components/schemas/ScoreSection'
            bite:
              $ref: '#/components/schemas/ScoreSection'
            site:
              $ref: '#/components/schemas/ScoreSection'
        class_value:
          type: integer
          minimum: 1
          maximum: 5
          description: 'number from 1 to 5, indicating the current user rank (beginner, etc) in respect to adult reports. The lower the number, the higher the rank'
        class_label:
          type: string
          description: 'Label corresponding to the class_value: i.e 1 for Grandmaster'
        rank_value:
          type: integer
          description: 'Ranking position of this user according to the adult score only'
        top_perc:
          type: number
          format: float
          description: 'Percentile of users that contains this user according to his mosquito rank'
        ranked_users:
          type: integer
          description: 'Number of users used to calculate the adult(mosquito) rank'
    Fix:
      type: object
      properties:
        user_coverage_uuid:
          type: string
          format: uuid
          nullable: true
          description: UUID randomly generated on phone to identify each unique
            user, but only within the coverage data so that privacy issues
            are not raised by linking this to the report data.. Must be exactly
            36 characters (32 hex digits plus 4 hyphens).
          maxLength: 36
        fix_time:
          type: string
          format: date-time
          description: Date and time when fix was recorded on phone. Format
            as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
        phone_upload_time:
          type: string
          format: date-time
          description: Date and time on phone when it uploaded fix. Format
            as ECMA 262 date time string (e.g. "2014-05-17T12:34:56.123+01:00".
        masked_lon:
          type: number
          description: Longitude rounded down to nearest 0.5 decimal degree
            (floor(lon/.5)*.5).
        masked_lat:
          type: number
          description: Latitude rounded down to nearest 0.5 decimal degree
            (floor(lat/.5)*.5).
        power:
          type: number
          nullable: true
          description: 'Power level of phone at time fix recorded, expressed
                          as proportion of full charge. Range: 0-1.'
        mask_size:
          type: number
          nullable: true
          description: size of location mask used
        required:
          - fix_time
          - phone_upload_time
          - masked_lon
          - masked_lat