# Generated by Django 2.2.7 on 2024-11-06 13:49

from django.db import migrations, models
import timezone_field.fields

from datetime import tzinfo
import pytz
from typing import Union

from timezonefinder import TimezoneFinder

timezone_finder = TimezoneFinder()

def get_timezone_from_coordinates(report) -> Union[tzinfo, None]:
    # NOTE: taken from mixins.py TimeZoneModelMixin
    if not report.point:
        return

    latitude = report.point.y
    longitude = report.point.x

    timezone_from_coordinates = None
    if latitude is not None and longitude is not None:
        # Get the timezone based on latitude and longitude
        try:
            timezone_from_coordinates = pytz.timezone(
                timezone_finder.timezone_at(lat=latitude, lng=longitude)
            )
        except ValueError:
            # Timezonefinder: the coordinates were out of bounds
            pass
        except pytz.exceptions.UnknownTimeZoneError:
            pass

    return timezone_from_coordinates

def update_report_timezone_field(apps, schema_editor):
    HistoricalReport = apps.get_model("tigaserver_app", "HistoricalReport")
    Report = apps.get_model("tigaserver_app", "Report")

    # Looks like a bug in TimeZoneField, it never set to null.
    qs = Report.objects.filter(models.Q(timezone__isnull=True) | models.Q(timezone=''))

    # Update reports in a single transaction for efficiency
    reports_to_update = []
    for report in qs.iterator():
        report.timezone = get_timezone_from_coordinates(report)
        reports_to_update.append(report)

    # Perform a bulk update on only the 'timezone' field
    Report.objects.bulk_update(reports_to_update, ['timezone'], batch_size=2000)
    HistoricalReport.objects.update(
        timezone=models.Subquery(
            Report.objects.filter(version_UUID=models.OuterRef('version_UUID')).values('timezone')[:1]
        )
    )

    # Update all reports with an empty string in the timezone field to None
    Report.objects.filter(timezone='').update(timezone=None)

class Migration(migrations.Migration):

    dependencies = [
        ('tigaserver_app', '0059_photo_processed_image_field'),
    ]

    operations = [
        migrations.RenameField(
            model_name='historicalreport',
            old_name='phone_timezone',
            new_name='timezone',
        ),
        migrations.AlterField(
            model_name='historicalreport',
            name='timezone',
            field=timezone_field.fields.TimeZoneField(help_text='The timezone corresponding to the GPS of the report.', null=True),
        ),
        migrations.RenameField(
            model_name='report',
            old_name='phone_timezone',
            new_name='timezone',
        ),
        migrations.AlterField(
            model_name='report',
            name='timezone',
            field=timezone_field.fields.TimeZoneField(help_text='The timezone corresponding to the GPS of the report.', null=True),
        ),
        migrations.RunPython(update_report_timezone_field, migrations.RunPython.noop),
    ]
