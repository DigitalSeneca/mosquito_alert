# Generated by Django 2.2.7 on 2021-03-01 10:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tigaserver_app', '0005_auto_20210216_1358'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_code', models.CharField(help_text='Code for the topic.', max_length=100)),
                ('topic_description', models.TextField(help_text='Description for the topic, in english.')),
            ],
        ),
        migrations.RemoveField(
            model_name='notification',
            name='acknowledged',
        ),
        migrations.RemoveField(
            model_name='notification',
            name='user',
        ),
        migrations.AddField(
            model_name='notification',
            name='map_notification',
            field=models.BooleanField(default=False, help_text='Flag field to help discriminate notifications which have been issued from the map'),
        ),
        migrations.AddField(
            model_name='notificationcontent',
            name='predefined_available_to',
            field=models.ForeignKey(blank=True, help_text='If this field is not null, this notification is predefined - the predefined map notifications will go here. This field indicates the expert to which the notification is available', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='predefined_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(help_text='Topics to which the user is subscribed', on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_users', to='tigaserver_app.NotificationTopic')),
                ('user', models.ForeignKey(help_text='User which is subscribed to the topic', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_subscriptions', to='tigaserver_app.TigaUser')),
            ],
        ),
        migrations.CreateModel(
            name='SentNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.ForeignKey(help_text='The notification which has been sent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_sendings', to='tigaserver_app.Notification')),
                ('sent_to_topic', models.ForeignKey(blank=True, help_text='Topic to which the notification was sent.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_sentnotifications', to='tigaserver_app.NotificationTopic')),
                ('sent_to_user', models.ForeignKey(blank=True, help_text='User to which the notification was sent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_sentnotifications', to='tigaserver_app.TigaUser')),
            ],
        ),
        migrations.CreateModel(
            name='AcknowledgedNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledged', models.BooleanField(default=True, help_text='This is set to True through the public API, when the user signals that the message has been received')),
                ('notification', models.ForeignKey(help_text='The notification which has been acknowledged or not', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_acknowledgements', to='tigaserver_app.Notification')),
                ('user', models.ForeignKey(help_text='User which has acknowledged the notification', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_acknowledgements', to='tigaserver_app.TigaUser')),
            ],
        ),
    ]
