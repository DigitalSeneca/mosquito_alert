# Generated by Django 2.2.7 on 2024-11-11 12:56

from django.db import migrations, models
import django.db.models.deletion
from django.utils.text import slugify
import taggit.managers
import re
from unidecode import unidecode


def populate_tags(apps, schema_editor):
    Report = apps.get_model('tigaserver_app', 'Report')
    Tag = apps.get_model('taggit', 'Tag')
    UUIDTaggedItem = apps.get_model('tigaserver_app', 'UUIDTaggedItem')

    ContentType = apps.get_model('contenttypes', 'ContentType')
    ct = ContentType.objects.get_for_model(Report)

    tagged_items = []
    for report in Report.objects.filter(note__isnull=False).exclude(note='').iterator():
        # Extract hashtags from the 'note' field using regex
        hashtags = re.findall(r'(?<=#)\w+', report.note)
        # Add the hashtags as tags
        for tag in hashtags:
            tag = unidecode(tag)
            t, created = Tag.objects.get_or_create(
                name__iexact=tag,
                defaults={
                    'name': tag,
                    'slug': slugify(tag)
                }
            )
            tagged_items.append(
                UUIDTaggedItem(
                    content_type_id=ct.id,
                    object_id=report.pk,
                    tag=t
                )
            )

    UUIDTaggedItem.objects.bulk_create(tagged_items,batch_size=2000)



class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('tigaserver_app', '0060_rename_phone_timezone_to_timezone'),
    ]

    operations = [
        migrations.CreateModel(
            name='UUIDTaggedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(db_index=True, max_length=36, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tigaserver_app_uuidtaggeditem_tagged_items', to='contenttypes.ContentType', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tigaserver_app_uuidtaggeditem_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='report',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags you can add to a report to make them easier to find.', through='tigaserver_app.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.RunPython(populate_tags, migrations.RunPython.noop),
    ]
