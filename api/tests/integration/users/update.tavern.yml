test_name: Make sure non auth users can not update

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
  - parametrize:
      key: method
      vals:
        - PUT
        - PATCH

stages:
  - name: Anonymous can not update
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: "{method}"
    response:
      status_code: 401

---

test_name: Make sure regular users can not be updated even with permissions

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - jwt_token_user_can_change_regular_user
    - user_uuid
    - another_user_uuid
  - parametrize:
      key: method
      vals:
        - PUT
        - PATCH

stages:
  - name: Auth regular users can not update itself even with permissions
    request:
      url: "{api_live_url}/{endpoint}/{user_uuid}/"
      method: "{method}"
      headers:
        Authorization: 'Bearer {jwt_token_user_can_change_regular_user}'
    response:
      status_code: 403
  - name: Auth regular users can not update other users even with permissions
    request:
      url: "{api_live_url}/{endpoint}/{another_user_uuid}/"
      method: "{method}"
      headers:
        Authorization: 'Bearer {jwt_token_user_can_change_regular_user}'
    response:
      status_code: 403

---
test_name: Auth user with can_change perm can update

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
    - jwt_token_user_can_change
  - parametrize:
      key: method
      vals:
        - PUT
        - PATCH

stages:
  - name: Auth user can update only if they have can_change permission
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: "{method}"
      headers:
        Authorization: 'Bearer {jwt_token_user_can_change}'
    response:
      status_code: 200

---

test_name: Mobile app user can update only itselves

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
    - app_user_token
  - parametrize:
      key: method
      vals:
        - PUT
        - PATCH

stages:
  - name: Mobile app user can update itself
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: "{method}"
      headers:
        Authorization: 'Bearer {app_user_token}'
      json:
        locale: "es"
    response:
      status_code: 200
      strict:
        - json:off
      json:
        locale: "es"
        language_iso: "es"
  # Now simulate another user trying to update the first user data
  - id: signup
    type: ref
  - id: login
    type: ref
  - name: Get user by unauthorized user
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
      headers:
        Authorization: "Bearer {token}"
    response:
      status_code: 403
