---

test_name: Make sure users can not get without permission

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
    - app_user_token
    - jwt_token_user
    - user_uuid

stages:
  - name: Anonymous user can not get mobile user
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
    response:
      status_code: 401
  - name: Authorized user without permission can not get user
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
      headers:
        Authorization: 'Bearer {jwt_token_user}'
    response:
      status_code: 403
  - name: Mobile user can not get regular user
    request:
      url: "{api_live_url}/{endpoint}/{user_uuid}/"
      method: GET
      headers:
        Authorization: "Bearer {app_user_token}"
    response:
      status_code: 403

---

test_name: Make sure users with permission can retrieve app users

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
    - jwt_token_user_can_view

stages:
  - name: Authorized user with permission can get mobile user
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
      headers:
        Authorization: 'Bearer {jwt_token_user_can_view}'
    response:
      status_code: 200

---

test_name: Make sure users endpoint works

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - app_user
    - app_user_token
    - jwt_token_user
    - user_uuid
    - another_user_uuid

stages:
  - name: Get mobile user by authorized user
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
      headers:
        Authorization: "Bearer {app_user_token}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"
  # Now simulate another user trying to access the first user data
  - id: signup
    type: ref
  - id: login
    type: ref
  - name: Mobile user can not get others profile.
    request:
      url: "{api_live_url}/{endpoint}/{app_user.pk}/"
      method: GET
      headers:
        Authorization: "Bearer {token}"
    response:
      status_code: 403
  - name: User can retrieve itself even without view permission
    request:
      url: "{api_live_url}/{endpoint}/{user_uuid}/"
      method: GET
      headers:
        Authorization: "Bearer {jwt_token_user}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"
  - name: User can not retrieve another user without permission
    request:
      url: "{api_live_url}/{endpoint}/{another_user_uuid}/"
      method: GET
      headers:
        Authorization: "Bearer {jwt_token_user}"
    response:
      status_code: 403

---

test_name: Make sure users with permission can retrieve other regular users

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - another_user_uuid
    - jwt_token_user_can_view_regular_user

stages:
  - name: User with view permission can retrieve other regular users
    request:
      url: "{api_live_url}/{endpoint}/{another_user_uuid}/"
      method: GET
      headers:
        Authorization: "Bearer {jwt_token_user_can_view_regular_user}"
    response:
      status_code: 200